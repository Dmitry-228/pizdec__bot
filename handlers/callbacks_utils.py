import asyncio
import logging
import os
import aiosqlite
from aiogram import Router, Bot
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode
from datetime import datetime
from config import ADMIN_IDS
from handlers.utils import safe_escape_markdown as escape_md, send_message_with_fallback, safe_answer_callback
from database import is_user_blocked, get_user_payments
from keyboards import create_main_menu_keyboard, create_admin_keyboard
from bot_counter import bot_counter
import os
from logger import get_logger
logger = get_logger('main')

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è —É—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã—Ö callback'–æ–≤
utils_callbacks_router = Router()

async def handle_utils_callback(query: CallbackQuery, state: FSMContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—â–∏–µ –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ callback-–∑–∞–ø—Ä–æ—Å—ã."""
    user_id = query.from_user.id
    await query.answer()

    if await is_user_blocked(user_id):
        await query.answer("üö´ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.", show_alert=True)
        await query.message.answer(
            escape_md("üö´ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @AXIDI_Help", version=2),
            parse_mode=ParseMode.MARKDOWN_V2
        )
        logger.info(f"–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å user_id={user_id} –ø—ã—Ç–∞–ª—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å callback: {query.data}")
        return

    callback_data = query.data
    logger.info(f"Callback –æ—Ç user_id={user_id}: {callback_data}")

    try:
        if callback_data == "back_to_menu":
            await handle_back_to_menu_callback(query, state, user_id)
        elif callback_data == "support":
            await handle_support_callback(query, state, user_id)
        elif callback_data == "faq":
            await handle_faq_callback(query, state, user_id)
        elif callback_data.startswith("faq_"):
            topic = callback_data.replace("faq_", "")
            await handle_faq_topic_callback(query, state, user_id, topic)
        elif callback_data == "help":
            from handlers.commands import help_command
            await help_command(query.message, state)
        elif callback_data == "user_guide":
            await handle_user_guide_callback(query, state, user_id)
        elif callback_data == "share_result":
            await handle_share_result_callback(query, state, user_id)
        elif callback_data == "payment_history":
            await handle_payment_history_callback(query, state, user_id)
        elif callback_data == "tariff_info":
            await handle_tariff_info_callback(query, state, user_id)
        elif callback_data == "category_info":
            await handle_category_info_callback(query, state, user_id)
        elif callback_data == "compare_tariffs":
            await handle_compare_tariffs_callback(query, state, user_id)
        elif callback_data == "aspect_ratio_info":
            await handle_aspect_ratio_info_callback(query, state, user_id)
        elif callback_data == "check_training":
            from handlers.commands import check_training
            await check_training(query.message, state, user_id)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω user_id
        else:
            logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback_data: {callback_data} –¥–ª—è user_id={user_id}")
            await query.message.answer(
                escape_md("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.", version=2),
                reply_markup=await create_main_menu_keyboard(user_id),
                parse_mode=ParseMode.MARKDOWN_V2
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ callback –¥–ª—è user_id={user_id}, data={callback_data}: {e}", exc_info=True)
        await query.message.answer(
            escape_md("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.", version=2),
            reply_markup=await create_main_menu_keyboard(user_id),
            parse_mode=ParseMode.MARKDOWN_V2
        )

async def handle_back_to_menu_callback(query: CallbackQuery, state: FSMContext, user_id: int) -> None:
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    await state.clear()
    await query.answer()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∏
    try:
        subscription_data = await check_database_user(user_id)
        if not subscription_data or len(subscription_data) < 11:
            logger.error(f"–ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è user_id={user_id}")
            await query.message.answer(
                escape_md("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", version=2),
                reply_markup=await create_main_menu_keyboard(user_id),
                parse_mode=ParseMode.MARKDOWN_V2
            )
            return

        generations_left = subscription_data[0]
        avatar_left = subscription_data[1]

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –º–µ–Ω—é —Å —Å—á—ë—Ç—á–∏–∫–æ–º
        total = await bot_counter.get_total_count()
        formatted = bot_counter.format_number(total)
        menu_text = (
            f"üé® PixelPie | üë• {formatted} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
            f"üåà –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!\n"
            f"–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è? üòä\n"
            f"üì∏ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å ‚Äî –°–æ–∑–¥–∞–π—Ç–µ –í–∞—à–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –í–∏–¥–µ–æ\n"
            f"üé≠ –ú–æ–∏ –∞–≤–∞—Ç–∞—Ä—ã ‚Äî —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã–π\n"
            f"üíé –ö—É–ø–∏—Ç—å –ø–∞–∫–µ—Ç ‚Äî –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –Ω–æ–≤—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π\n"
            f"üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç ‚Äî –í–∞—à –±–∞–ª–∞–Ω—Å, –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ò—Å—Ç–æ—Ä–∏—è\n"
            f"üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å! 24/7\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ üëá"
        )

        main_menu_keyboard = await create_main_menu_keyboard(user_id)

        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–∏–¥–µ–æ –µ—Å–ª–∏ –µ—Å—Ç—å
        await delete_all_videos(state, user_id, query.bot)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —Å –º–µ–Ω—é
        if generations_left > 0 or avatar_left > 0 or user_id in ADMIN_IDS:
            menu_video_path = "images/welcome1.mp4"
            try:
                if os.path.exists(menu_video_path):
                    from aiogram.types import FSInputFile
                    video_file = FSInputFile(menu_video_path)
                    video_message = await query.bot.send_video(
                        chat_id=user_id,
                        video=video_file,
                        caption=escape_md(menu_text, version=2),
                        reply_markup=main_menu_keyboard,
                        parse_mode=ParseMode.MARKDOWN_V2
                    )
                    await state.update_data(menu_video_message_id=video_message.message_id)
                else:
                    logger.warning(f"–í–∏–¥–µ–æ –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {menu_video_path}")
                    await query.message.answer(
                        escape_md(menu_text, version=2),
                        reply_markup=main_menu_keyboard,
                        parse_mode=ParseMode.MARKDOWN_V2
                    )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ: {e}")
                await query.message.answer(
                    escape_md(menu_text, version=2),
                    reply_markup=main_menu_keyboard,
                    parse_mode=ParseMode.MARKDOWN_V2
                )
        else:
            await query.message.answer(
                escape_md(menu_text, version=2),
                reply_markup=main_menu_keyboard,
                parse_mode=ParseMode.MARKDOWN_V2
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ back_to_menu: {e}")
        await query.message.answer(
            escape_md("‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /menu", version=2),
            parse_mode=ParseMode.MARKDOWN_V2
        )

async def delete_all_videos(state: FSMContext, user_id: int, bot: Bot) -> None:
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –≤–∏–¥–µ–æ (–º–µ–Ω—é –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏), –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å."""
    user_data = await state.get_data()
    for key in ['menu_video_message_id', 'generation_video_message_id']:
        if key in user_data:
            try:
                await bot.delete_message(chat_id=user_id, message_id=user_data[key])
                await state.update_data({key: None})
            except Exception as e:
                logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤–∏–¥–µ–æ {key} –¥–ª—è user_id={user_id}: {e}")

async def handle_support_callback(query: CallbackQuery, state: FSMContext, user_id: int) -> None:
    """–ü–æ–¥–¥–µ—Ä–∂–∫–∞."""
    await query.answer()
    text = (
        escape_md("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", version=2) + "\n\n" +
        escape_md("–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:", version=2) + "\n\n" +
        escape_md("üìû –ù–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", version=2) + "\n" +
        escape_md("‚ùì –ò–∑—É—á–∏—Ç–µ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", version=2) + "\n" +
        escape_md("üìñ –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", version=2) + "\n\n" +
        escape_md("ü§ù –ú—ã –ø–æ–º–æ–∂–µ–º —Ä–µ—à–∏—Ç—å –ª—é–±—É—é –ø—Ä–æ–±–ª–µ–º—É!", version=2)
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", url="https://t.me/AXIDI_Help")],
        [InlineKeyboardButton(text="‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")],
        [InlineKeyboardButton(text="üìñ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ", callback_data="user_guide")],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
    ])
    await query.message.answer(
        text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN_V2
    )
    logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è user_id={user_id}: {text}")

async def handle_faq_callback(query: CallbackQuery, state: FSMContext, user_id: int) -> None:
    """–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã."""
    text = (
        escape_md("‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", version=2) + "\n\n" +
        escape_md("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —Ç–µ–º—É:", version=2)
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì∏ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Ñ–æ—Ç–æ?", callback_data="faq_photo")],
        [InlineKeyboardButton(text="üé¨ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ?", callback_data="faq_video")],
        [InlineKeyboardButton(text="üë§ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä?", callback_data="faq_avatar")],
        [InlineKeyboardButton(text="üí° –°–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–æ–º–ø—Ç–∞–º", callback_data="faq_prompts")],
        [InlineKeyboardButton(text="‚ùì –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã", callback_data="faq_comments")],
        [InlineKeyboardButton(text="üíé –û –ø–æ–¥–ø–∏—Å–∫–µ", callback_data="faq_subscription")],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
    ])
    await query.message.answer(
        text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN_V2
    )
    logger.debug(f"FAQ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è user_id={user_id}: {text}")

async def handle_faq_topic_callback(query: CallbackQuery, state: FSMContext, user_id: int, topic: str) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–µ–º—ã FAQ."""
    faq_texts = {
        "photo": {
            "title": "üì∏ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Ñ–æ—Ç–æ?",
            "text": (
                "üì∏ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ\n\n"
                "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å'\n"
                "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è:\n"
                "   ‚Ä¢ –° –∞–≤–∞—Ç–∞—Ä–æ–º - –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ\n"
                "   ‚Ä¢ –ü–æ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—É - –¥–ª—è –ø–æ—Ö–æ–∂–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n\n"
                "3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–ø—Ç\n"
                "4Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω\n"
                "5Ô∏è‚É£ –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n\n"
                "üí° –°–æ–≤–µ—Ç: –ß–µ–º –¥–µ—Ç–∞–ª—å–Ω–µ–µ –ø—Ä–æ–º–ø—Ç, —Ç–µ–º –ª—É—á—à–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"
            )
        },
        "video": {
            "title": "üé¨ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ?",
            "text": (
                "üé¨ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ\n\n"
                "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å'\n"
                "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ 'AI-–≤–∏–¥–µ–æ'\n"
                "3Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n"
                "4Ô∏è‚É£ –û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –∞–Ω–∏–º–∞—Ü–∏—é\n"
                "5Ô∏è‚É£ –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∏\n\n"
                "‚è± –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ –∑–∞–Ω–∏–º–∞–µ—Ç 5-15 –º–∏–Ω—É—Ç\n"
                "üìπ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ: 3-5 —Å–µ–∫—É–Ω–¥"
            )
        },
        "avatar": {
            "title": "üë§ –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä?",
            "text": (
                "üë§ –°–æ–∑–¥–∞–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞\n\n"
                "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä' –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ\n"
                "2Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∏—Ç–µ 10-20 —Ñ–æ—Ç–æ:\n"
                "   ‚Ä¢ –†–∞–∑–Ω—ã–µ —Ä–∞–∫—É—Ä—Å—ã\n"
                "   ‚Ä¢ –•–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ\n"
                "   ‚Ä¢ –ß–µ—Ç–∫–æ–µ –ª–∏—Ü–æ\n\n"
                "3Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –∏–º—è –∏ —Ç—Ä–∏–≥–≥–µ—Ä-—Å–ª–æ–≤–æ\n"
                "4Ô∏è‚É£ –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±—É—á–µ–Ω–∏—è (30-40 –º–∏–Ω—É—Ç)\n\n"
                "‚úÖ –ü–æ—Å–ª–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–≤–∞—Ç–∞—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π!"
            )
        },
        "prompts": {
            "title": "üí° –°–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–æ–º–ø—Ç–∞–º",
            "text": (
                "üí° –°–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–æ–º–ø—Ç–∞–º\n\n"
                "‚úÖ –•–æ—Ä–æ—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏:\n"
                "‚Ä¢ –û–ø–∏—Å—ã–≤–∞–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–æ\n"
                "‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å—Ç–∏–ª—å –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ\n"
                "‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏\n\n"
                "üìù –ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞:\n"
                "'–ü–æ—Ä—Ç—Ä–µ—Ç –≤ —Å—Ç–∏–ª–µ —Ä–µ–Ω–µ—Å—Å–∞–Ω—Å, –º—è–≥–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ, "
                "–¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ'\n\n"
                "‚ùå –ò–∑–±–µ–≥–∞–π—Ç–µ:\n"
                "‚Ä¢ –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ–ø–∏—Å–∞–Ω–∏–π\n"
                "‚Ä¢ –ü—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π\n"
                "‚Ä¢ –ù–µ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–Ω—ã—Ö –æ–∂–∏–¥–∞–Ω–∏–π"
            )
        },
        "comments": {
            "title": "‚ùì –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º",
            "text": (
                "‚ùì –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è\n\n"
                "üî¥ –ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ:\n"
                "‚Üí –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n\n"
                "üî¥ –ê–≤–∞—Ç–∞—Ä –Ω–µ –ø–æ—Ö–æ–∂:\n"
                "‚Üí –ó–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ–ª—å—à–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ\n\n"
                "üî¥ –î–æ–ª–≥–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è:\n"
                "‚Üí –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –≤–∏–¥–µ–æ —Ç—Ä–µ–±—É–µ—Ç –≤—Ä–µ–º–µ–Ω–∏\n\n"
                "üî¥ –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:\n"
                "‚Üí –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\n\n"
                "üí¨ –ù–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç? –ù–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É!"
            )
        },
        "subscription": {
            "title": "üíé –û –ø–æ–¥–ø–∏—Å–∫–µ",
            "text": (
                "üíé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ\n\n"
                "üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:\n"
                "‚Ä¢ –°—Ç–∞—Ä—Ç - –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å —Å–µ—Ä–≤–∏—Å–æ–º\n"
                "‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç - –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä\n"
                "‚Ä¢ –ü—Ä–µ–º–∏—É–º - –º–∞–∫—Å–∏–º—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π\n\n"
                "‚úÖ –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç:\n"
                "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–æ—Ç–æ\n"
                "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–æ–≤\n"
                "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ\n\n"
                "üí∞ –†–µ—Å—É—Ä—Å—ã –Ω–µ —Å–≥–æ—Ä–∞—é—Ç –∏ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞!"
            )
        }
    }
    if topic not in faq_texts:
        await safe_answer_callback(query, "‚ùå –¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
        return
    info = faq_texts[topic]
    escaped_text = escape_md(info["text"], version=2)
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùì –î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")],
        [InlineKeyboardButton(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
    ])
    await query.message.answer(
        escaped_text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN_V2
    )
    logger.debug(f"FAQ —Ç–µ–º–∞ {topic} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è user_id={user_id}: {escaped_text}")

async def handle_user_guide_callback(query: CallbackQuery, state: FSMContext, user_id: int) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    text = (
        escape_md("üìñ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", version=2) + "\n\n" +
        escape_md("üéØ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:", version=2) + "\n" +
        escape_md("1. –ö—É–ø–∏—Ç–µ –ø–∞–∫–µ—Ç –ø–µ—á–µ–Ω–µ–∫", version=2) + "\n" +
        escape_md("2. –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –∞–≤–∞—Ç–∞—Ä", version=2) + "\n" +
        escape_md("3. –ì–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ", version=2) + "\n\n" +
        escape_md("üì∏ –¢–∏–ø—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:", version=2) + "\n" +
        escape_md("‚Ä¢ –° –∞–≤–∞—Ç–∞—Ä–æ–º - –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ", version=2) + "\n" +
        escape_md("‚Ä¢ –ü–æ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—É - –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∏–ª—è", version=2) + "\n" +
        escape_md("‚Ä¢ AI-–≤–∏–¥–µ–æ - –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏–∫–∏", version=2) + "\n\n" +
        escape_md("üí° –°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:", version=2) + "\n" +
        escape_md("‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è", version=2) + "\n" +
        escape_md("‚Ä¢ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–æ —Å—Ç–∏–ª—è–º–∏", version=2) + "\n" +
        escape_md("‚Ä¢ –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞", version=2)
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ú® –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å", callback_data="generate_menu")],
        [InlineKeyboardButton(text="‚ùì –í–æ–ø—Ä–æ—Å—ã", callback_data="faq")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="support")]
    ])
    await query.message.answer(
        text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN_V2
    )
    logger.debug(f"–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è user_id={user_id}: {text}")

async def handle_share_result_callback(query: CallbackQuery, state: FSMContext, user_id: int) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º."""
    bot_username = (await query.bot.get_me()).username.lstrip('@')
    share_text = escape_md("–ü–æ—Å–º–æ—Ç—Ä–∏, –∫–∞–∫–∏–µ –∫—Ä—É—Ç—ã–µ —Ñ–æ—Ç–æ —è —Å–æ–∑–¥–∞–ª —Å –ø–æ–º–æ—â—å—é AI! ü§ñ‚ú®", version=2)
    share_url = f"https://t.me/share/url?url=t.me/{bot_username}&text={share_text}"
    text = (
        escape_md("üì§ –ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏!", version=2) + "\n\n" +
        escape_md("–ü–æ–∫–∞–∂–∏ –¥—Ä—É–∑—å—è–º, –∫–∞–∫–∏–µ –∫—Ä—É—Ç—ã–µ —Ñ–æ—Ç–æ —Ç—ã —Å–æ–∑–¥–∞–µ—à—å —Å –ø–æ–º–æ—â—å—é AI!", version=2) + "\n" +
        escape_md("–í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∏ —Ç–æ–∂–µ –∑–∞—Ö–æ—Ç—è—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å.", version=2)
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram", url=share_url)],
        [InlineKeyboardButton(text="üîÑ –°–æ–∑–¥–∞—Ç—å –µ—â–µ", callback_data="generate_menu")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
    ])
    await query.message.answer(
        text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN_V2
    )
    logger.debug(f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è user_id={user_id}: {text}")

async def handle_payment_history_callback(query: CallbackQuery, state: FSMContext, user_id: int) -> None:
    """–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π."""
    try:
        payments = await get_user_payments(user_id, limit=10)
        if not payments:
            text = (
                escape_md("üí≥ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π", version=2) + "\n\n" +
                escape_md("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π.", version=2) + "\n" +
                escape_md("–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–µ—Ä–≤—ã–π –ø–∞–∫–µ—Ç!", version=2)
            )
        else:
            text = escape_md("üí≥ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π", version=2) + "\n\n"
            for payment in payments:
                payment_id, payment_type, amount, created_at = payment[:4]
                if created_at:
                    try:
                        created_at_dt = datetime.strptime(created_at, '%Y-%m-%d %H:%M:%S')
                        date_str = created_at_dt.strftime("%d.%m.%Y")
                    except ValueError as e:
                        logger.warning(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ created_at –¥–ª—è payment_id={payment_id}: {created_at}, –æ—à–∏–±–∫–∞: {e}")
                        date_str = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞"
                else:
                    date_str = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                amount_str = f"{amount:.0f}‚ÇΩ" if amount is not None else "0‚ÇΩ"
                text += escape_md(f"üìÖ {date_str} ‚Ä¢ {amount_str}", version=2) + "\n"
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="subscribe")],
            [InlineKeyboardButton(text="üîô –í –ø—Ä–æ—Ñ–∏–ª—å", callback_data="user_profile")]
        ])
        await query.message.answer(
            text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN_V2
        )
        logger.debug(f"–ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è user_id={user_id}: {text}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è user_id={user_id}: {e}", exc_info=True)
        await safe_answer_callback(query, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏", show_alert=True)
        await query.message.answer(
            escape_md("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", version=2),
            reply_markup=await create_main_menu_keyboard(user_id),
            parse_mode=ParseMode.MARKDOWN_V2
        )

async def handle_tariff_info_callback(query: CallbackQuery, state: FSMContext, user_id: int) -> None:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–∞—Ö."""
    text = (
        escape_md("üíé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–∞—Ö", version=2) + "\n\n" +
        escape_md("üì∏ –ü–µ—á–µ–Ω—å–∫–∏ - —Ä–µ—Å—É—Ä—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", version=2) + "\n" +
        escape_md("üë§ –ê–≤–∞—Ç–∞—Ä—ã - —Ä–µ—Å—É—Ä—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π", version=2) + "\n\n" +
        escape_md("üîÑ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:", version=2) + "\n" +
        escape_md("1. –ü–æ–∫—É–ø–∞–µ—Ç–µ –ø–∞–∫–µ—Ç –ø–µ—á–µ–Ω–µ–∫", version=2) + "\n" +
        escape_md("2. –°–æ–∑–¥–∞–µ—Ç–µ –∞–≤–∞—Ç–∞—Ä (—Ç—Ä–∞—Ç–∏—Ç—Å—è 1 –∞–≤–∞—Ç–∞—Ä –∏–ª–∏ 590‚ÇΩ)", version=2) + "\n" +
        escape_md("3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç–µ —Ñ–æ—Ç–æ —Å –∞–≤–∞—Ç–∞—Ä–æ–º (—Ç—Ä–∞—Ç—è—Ç—Å—è –ø–µ—á–µ–Ω—å–∫–∏)", version=2) + "\n\n" +
        escape_md("üí∞ –ù–∞—à–∏ —Ü–µ–Ω—ã:", version=2) + "\n" +
        escape_md("üì∏ –û—Ç 399‚ÇΩ –∑–∞ 10 –ø–µ—á–µ–Ω–µ–∫ (—Å—Ç–∞—Ä—Ç–æ–≤—ã–π)", version=2) + "\n" +
        escape_md("üì∏ –î–æ 4599‚ÇΩ –∑–∞ 250 –ø–µ—á–µ–Ω–µ–∫ + –∞–≤–∞—Ç–∞—Ä (–º–∞–∫—Å–∏–º—É–º)", version=2) + "\n" +
        escape_md("üë§ –û—Ç–¥–µ–ª—å–Ω—ã–π –∞–≤–∞—Ç–∞—Ä - 590‚ÇΩ", version=2) + "\n\n" +
        escape_md("üéÅ –ü—Ä–∏ –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–µ - –∞–≤–∞—Ç–∞—Ä –≤ –ø–æ–¥–∞—Ä–æ–∫!", version=2)
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üíé –í—ã–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç", callback_data="subscribe")],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
    ])
    await query.message.answer(
        text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN_V2
    )
    logger.debug(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–∞—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è user_id={user_id}: {text}")

async def handle_category_info_callback(query: CallbackQuery, state: FSMContext, user_id: int) -> None:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö."""
    text = (
        escape_md("üìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞", version=2) + "\n\n" +
        escape_md("üé® –§–æ—Ç–æ—Å–µ—Å—Å–∏—è - —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ —Å –≤–∞—à–∏–º –∞–≤–∞—Ç–∞—Ä–æ–º", version=2) + "\n" +
        escape_md("üñº –§–æ—Ç–æ –ø–æ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—É - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é", version=2) + "\n" +
        escape_md("üé¨ AI-–≤–∏–¥–µ–æ - —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–æ–≤", version=2) + "\n\n" +
        escape_md("‚ÑπÔ∏è –î–ª—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏ –Ω—É–∂–µ–Ω –æ–±—É—á–µ–Ω–Ω—ã–π –∞–≤–∞—Ç–∞—Ä.", version=2) + "\n" +
        escape_md("‚ÑπÔ∏è –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∞–≤–∞—Ç–∞—Ä –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.", version=2)
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ú® –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å", callback_data="generate_menu")],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
    ])
    await query.message.answer(
        text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN_V2
    )
    logger.debug(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è user_id={user_id}: {text}")

async def handle_compare_tariffs_callback(query: CallbackQuery, state: FSMContext, user_id: int) -> None:
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤."""
    text = (
        escape_md("üíé –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤", version=2) + "\n\n" +
        escape_md("üì∏ 10 –ø–µ—á–µ–Ω–µ–∫ - 399‚ÇΩ (39.9‚ÇΩ –∑–∞ —Ñ–æ—Ç–æ)", version=2) + "\n" +
        escape_md("üì∏ 30 –ø–µ—á–µ–Ω–µ–∫ - 599‚ÇΩ (20‚ÇΩ –∑–∞ —Ñ–æ—Ç–æ)", version=2) + "\n" +
        escape_md("üì∏ 70 –ø–µ—á–µ–Ω–µ–∫ - 1199‚ÇΩ (17.1‚ÇΩ –∑–∞ —Ñ–æ—Ç–æ)", version=2) + "\n" +
        escape_md("üì∏ 170 –ø–µ—á–µ–Ω–µ–∫ + –∞–≤–∞—Ç–∞—Ä - 3119‚ÇΩ (18.3‚ÇΩ –∑–∞ —Ñ–æ—Ç–æ)", version=2) + "\n" +
        escape_md("üì∏ 250 –ø–µ—á–µ–Ω–µ–∫ + –∞–≤–∞—Ç–∞—Ä - 4599‚ÇΩ (18.4‚ÇΩ –∑–∞ —Ñ–æ—Ç–æ)", version=2) + "\n" +
        escape_md("üë§ 1 –∞–≤–∞—Ç–∞—Ä - 590‚ÇΩ", version=2) + "\n\n" +
        escape_md("üí° –°–∞–º—ã–π –≤—ã–≥–æ–¥–Ω—ã–π: 70 –ø–µ—á–µ–Ω–µ–∫ –∑–∞ 1199‚ÇΩ!", version=2) + "\n" +
        escape_md("üéÅ –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: 250 –ø–µ—á–µ–Ω–µ–∫ + –∞–≤–∞—Ç–∞—Ä!", version=2)
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üíé –í—ã–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç", callback_data="subscribe")],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
    ])
    await query.message.answer(
        text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN_V2
    )
    logger.debug(f"–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è user_id={user_id}: {text}")

async def handle_aspect_ratio_info_callback(query: CallbackQuery, state: FSMContext, user_id: int) -> None:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö —Å—Ç–æ—Ä–æ–Ω."""
    text = (
        escape_md("üìê –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω", version=2) + "\n\n" +
        escape_md("üì± –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ: –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π", version=2) + "\n" +
        escape_md("üñ•Ô∏è –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ: –¥–ª—è —à–∏—Ä–æ–∫–∏—Ö –∫–∞–¥—Ä–æ–≤", version=2) + "\n" +
        escape_md("üì≤ –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ: –¥–ª—è –ø–æ—Ä—Ç—Ä–µ—Ç–æ–≤ –∏ Stories", version=2) + "\n\n" +
        escape_md("üí° –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ñ–æ—Ä–º–∞—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –≥–¥–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.", version=2)
    )
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ö –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∞", callback_data="back_to_aspect_selection")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
    ])
    await query.message.answer(
        text, reply_markup=keyboard, parse_mode=ParseMode.MARKDOWN_V2
    )
    logger.debug(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö —Å—Ç–æ—Ä–æ–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è user_id={user_id}: {text}")

async def cancel(message: Message, state: FSMContext) -> None:
    """–û—Ç–º–µ–Ω—è–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç."""
    user_id = message.from_user.id
    await state.clear()
    text = escape_md("‚úÖ –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã.", version=2)
    reply_markup = await create_admin_keyboard() if user_id in ADMIN_IDS else await create_main_menu_keyboard(user_id)
    await message.answer(
        text, reply_markup=reply_markup, parse_mode=ParseMode.MARKDOWN_V2
    )
    logger.debug(f"–î–µ–π—Å—Ç–≤–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã –¥–ª—è user_id={user_id}: {text}")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
@utils_callbacks_router.callback_query(
    lambda c: c.data in [
        "back_to_menu", "support", "faq", "help", "user_guide", "share_result",
        "payment_history", "tariff_info", "category_info", "compare_tariffs",
        "aspect_ratio_info", "check_training"
    ] or c.data.startswith("faq_")
)
async def utils_callback_handler(query: CallbackQuery, state: FSMContext) -> None:
    await handle_utils_callback(query, state)
