"""
Callback —Ö–µ–Ω–¥–ª–µ—Ä—ã –¥–æ–º–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
"""

import logging
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext

from database import get_user_referrals, check_database_user
from keyboards import create_main_menu_keyboard
from ..common.base import BaseCallbackHandler
from ..common.decorators import log_handler_call
from ..common.types import CallbackResult

logger = logging.getLogger(__name__)


class ReferralCallbackHandler(BaseCallbackHandler):
    """–•–µ–Ω–¥–ª–µ—Ä —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö callback'–æ–≤."""
    
    @log_handler_call
    async def handle(self, query: CallbackQuery, state: FSMContext) -> CallbackResult:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ callback'–∏."""
        user_id = query.from_user.id
        callback_data = query.data
        
        if callback_data == "referral_info":
            return await self._show_referral_info(query, user_id)
        elif callback_data == "referral_stats":
            return await self._show_referral_stats(query, user_id)
        else:
            return CallbackResult.error_result("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
    
    async def _show_referral_info(self, query: CallbackQuery, user_id: int) -> CallbackResult:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ."""
        referral_link = f"https://t.me/{query.bot.username}?start={user_id}"
        
        info_text = f"""
üéØ **–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞**

–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã!

**–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:**
`{referral_link}`

**–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
‚Ä¢ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏
‚Ä¢ –ö–æ–≥–¥–∞ –¥—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, –≤—ã –æ–±–∞ –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å—ã
‚Ä¢ –ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π - —Ç–µ–º –±–æ–ª—å—à–µ –±–æ–Ω—É—Å–æ–≤!

**–ë–æ–Ω—É—Å—ã:**
‚Ä¢ üç™ +5 –ø–µ—á–µ–Ω–µ–∫ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞
‚Ä¢ üé≠ +1 –∞–≤–∞—Ç–∞—Ä –∑–∞ –∫–∞–∂–¥—ã–µ 5 –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π

–ù–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üöÄ
        """
        
        await self.edit_safe_message(query.message, info_text.strip())
        
        return CallbackResult.success_result(
            message="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–∫–∞–∑–∞–Ω–∞",
            answer_text="üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ"
        )
    
    async def _show_referral_stats(self, query: CallbackQuery, user_id: int) -> CallbackResult:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
            referrals = await get_user_referrals(user_id)
            referral_count = len(referrals) if referrals else 0
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –±–æ–Ω—É—Å–æ–≤
            user_data = await check_database_user(user_id)
            if not user_data:
                return CallbackResult.error_result("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –±–æ–Ω—É—Å—ã
            bonus_photos = referral_count * 5
            bonus_avatars = referral_count // 5
            
            stats_text = f"""
üìä **–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**

üë• **–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π:** {referral_count}

üéÅ **–ü–æ–ª—É—á–µ–Ω–æ –±–æ–Ω—É—Å–æ–≤:**
‚Ä¢ üç™ –ü–µ—á–µ–Ω—å–∫–∏: +{bonus_photos}
‚Ä¢ üé≠ –ê–≤–∞—Ç–∞—Ä—ã: +{bonus_avatars}

üìà **–ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞:**
{referral_count % 5}/5 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
            """
            
            if referrals:
                stats_text += "\n\nüë• **–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã:**\n"
                for i, referral in enumerate(referrals[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10
                    ref_name = referral.get('first_name', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                    ref_username = referral.get('username', '')
                    if ref_username:
                        stats_text += f"{i}. {ref_name} (@{ref_username})\n"
                    else:
                        stats_text += f"{i}. {ref_name}\n"
                
                if len(referrals) > 10:
                    stats_text += f"... –∏ –µ—â–µ {len(referrals) - 10} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n"
            
            await self.edit_safe_message(query.message, stats_text.strip())
            
            return CallbackResult.success_result(
                message="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–∫–∞–∑–∞–Ω–∞",
                answer_text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è {user_id}: {e}", exc_info=True)
            return CallbackResult.error_result("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")


class MenuCallbackHandler(BaseCallbackHandler):
    """–•–µ–Ω–¥–ª–µ—Ä callback'–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    
    @log_handler_call
    async def handle(self, query: CallbackQuery, state: FSMContext) -> CallbackResult:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback'–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
        user_id = query.from_user.id
        callback_data = query.data
        
        if callback_data == "main_menu":
            return await self._show_main_menu(query, user_id)
        elif callback_data == "back_to_menu":
            return await self._show_main_menu(query, user_id)
        else:
            return CallbackResult.error_result("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –º–µ–Ω—é")
    
    async def _show_main_menu(self, query: CallbackQuery, user_id: int) -> CallbackResult:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
        await state.clear()  # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é
        
        welcome_text = "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        reply_markup = await create_main_menu_keyboard(user_id)
        
        await self.edit_safe_message(query.message, welcome_text, reply_markup)
        
        return CallbackResult.success_result(
            message="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–∫–∞–∑–∞–Ω–æ",
            answer_text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        )