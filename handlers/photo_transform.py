"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ "–§–æ—Ç–æ –ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
PixelPie AI Bot - –≤–µ—Ä—Å–∏—è –¥–ª—è aiogram
"""

from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, BufferedInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.enums import ParseMode
import logging
import os
import uuid
from datetime import datetime
import asyncio
import time
from typing import Optional
import io

from generation.photo_transform import PhotoTransformGenerator
from database import check_database_user, update_user_credits, is_user_blocked
from config import ADMIN_IDS
from handlers.utils import escape_message_parts

from logger import get_logger
logger = get_logger('generation')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
photo_transform_router = Router(name='photo_transform')

# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
class PhotoTransformStates(StatesGroup):
    waiting_for_photo = State()
    choosing_style = State()
    choosing_aspect_ratio = State()
    processing = State()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ —Ä–æ—É—Ç–µ—Ä–∞)
photo_generator: Optional[PhotoTransformGenerator] = None

def init_photo_generator(replicate_api_key: str):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Ñ–æ—Ç–æ"""
    global photo_generator
    photo_generator = PhotoTransformGenerator(replicate_api_key)

from utils import get_cookie_progress_bar

def get_progress_bar(percent: int) -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∏–∑ –ø–µ—á–µ–Ω–µ–∫

    Args:
        percent: –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (0-100)

    Returns:
        –°—Ç—Ä–æ–∫–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
    """
    return get_cookie_progress_bar(percent)

async def update_progress(progress_message: Message, state: FSMContext, expected_duration: int = 67):
    """
    –§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞.

    Args:
        progress_message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
        state: FSMContext –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è.
        expected_duration: –û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
    """
    start_time = time.time()
    while True:
        elapsed = time.time() - start_time
        percent = min(int((elapsed / expected_duration) * 100), 99)
        current_state = await state.get_state()
        if current_state != PhotoTransformStates.processing:
            break

        progress_text = (
            f"‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...\n"
            f"{get_progress_bar(percent)} ‚Äì –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –Ω–∞—à–µ–π –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é...\n"
            f"–≠—Ç–æ –∑–∞–π–º–µ—Ç –æ–∫–æ–ª–æ 1 –º–∏–Ω—É—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ üòä"
        )
        try:
            await progress_message.edit_text(
                escape_message_parts(progress_text, version=2),
                parse_mode=ParseMode.MARKDOWN_V2
            )
        except Exception as e:
            logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å: {e}")
            break

        await asyncio.sleep(5)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏—è
@photo_transform_router.callback_query(F.data == "photo_transform")
async def start_photo_transform(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ç–æ"""
    try:
        await callback.answer()
        user_id = callback.from_user.id

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        if await is_user_blocked(user_id):
            await callback.message.answer(
                escape_message_parts("üö´ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @AXIDI_Help", version=2),
                parse_mode=ParseMode.MARKDOWN_V2
            )
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
        user_data = await check_database_user(user_id)
        if not user_data or user_data[0] <= 0:
            await callback.message.answer(
                escape_message_parts("‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—á–µ–Ω–µ–∫ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å!", version=2),
                parse_mode=ParseMode.MARKDOWN_V2,
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üí≥ –ö—É–ø–∏—Ç—å –ø–∞–∫–µ—Ç", callback_data="subscribe")],
                    [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
                ])
            )
            return

        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()

        # –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        welcome_text = """üé≠ –§–æ—Ç–æ –ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç PixelPie AI

–ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –≤–∞—à–µ —Å–µ–ª—Ñ–∏ –≤ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞! üé®

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æ, –∏ –Ω–∞—à–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å —Å–æ–∑–¥–∞—Å—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ.

–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏ –ø—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏—è:
‚ñ™Ô∏è ü§ç –§–æ—Ç–æ—à–æ–ø Pro ‚Äî –ñ—É—Ä–Ω–∞–ª—å–Ω–∞—è —Ä–µ—Ç—É—à—å —É—Ä–æ–≤–Ω—è Vogue
‚ñ™Ô∏è üé® AI Art ‚Äî –¶–∏—Ñ—Ä–æ–≤–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ –∫–∞–∫ –Ω–∞ Artstation
‚ñ™Ô∏è üé¨ –ö–∏–Ω–æ ‚Äî –ö–∞–¥—Ä –∏–∑ –≥–æ–ª–ª–∏–≤—É–¥—Å–∫–æ–≥–æ –±–ª–æ–∫–±–∞—Å—Ç–µ—Ä–∞
‚ñ™Ô∏è üñºÔ∏è –ü–æ—Ä—Ç—Ä–µ—Ç ‚Äî –ê—Ä—Ç-—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –º—É–∑–µ–π–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è
‚ñ™Ô∏è ‚ö° –ö–∏–±–µ—Ä–ø–∞–Ω–∫ ‚Äî –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ Blade Runner 2049
‚ñ™Ô∏è üß± LEGO ‚Äî –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω–∞—è —Ñ–∏–≥—É—Ä–∫–∞

üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ –¥–ª—è –Ω–∞—á–∞–ª–∞!"""

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="transform_cancel")]
        ])

        await callback.message.answer(
            escape_message_parts(welcome_text, version=2),
            parse_mode=ParseMode.MARKDOWN_V2,
            reply_markup=keyboard
        )

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ
        await state.set_state(PhotoTransformStates.waiting_for_photo)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ photo transform: {str(e)}")
        await callback.message.answer(
            escape_message_parts("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", version=2),
            parse_mode=ParseMode.MARKDOWN_V2
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ
@photo_transform_router.message(PhotoTransformStates.waiting_for_photo, F.photo)
async def handle_photo(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ"""
    try:
        user_id = message.from_user.id

        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —Ñ–æ—Ç–æ
        photo = message.photo[-1]
        file_id = photo.file_id

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(photo_file_id=file_id)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Å—Ç–∏–ª–µ–π
        style_text = """‚ú® –û—Ç–ª–∏—á–Ω–æ! –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ.

–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –ø—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏—è:"""

        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å—Ç–∏–ª—è–º–∏
        keyboard_data = photo_generator.get_style_keyboard()
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text=btn["text"], callback_data=btn["callback_data"])
             for btn in row]
            for row in keyboard_data
        ])

        try:
            await message.delete()
            await message.edit_text(
                escape_message_parts(style_text, version=2),
                parse_mode=ParseMode.MARKDOWN_V2,
                reply_markup=keyboard
            )
        except Exception:
            await message.answer(
                escape_message_parts(style_text, version=2),
                parse_mode=ParseMode.MARKDOWN_V2,
                reply_markup=keyboard
            )

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —Å—Ç–∏–ª—è
        await state.set_state(PhotoTransformStates.choosing_style)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {str(e)}")
        await message.answer(
            escape_message_parts("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", version=2),
            parse_mode=ParseMode.MARKDOWN_V2
        )
        await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ —Ñ–æ—Ç–æ
@photo_transform_router.message(PhotoTransformStates.waiting_for_photo)
async def handle_wrong_content(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    await message.answer(
        escape_message_parts(
            "üì∏ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏—è.\n\n"
            "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ JPG/PNG.",
            version=2
        ),
        parse_mode=ParseMode.MARKDOWN_V2
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è
@photo_transform_router.callback_query(PhotoTransformStates.choosing_style, F.data.startswith("transform_style:"))
async def handle_style_selection(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É aspect_ratio"""
    try:
        await callback.answer()
        user_id = callback.from_user.id

        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å
        style = callback.data.split(":")[1]

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∏–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(selected_style=style)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Å —ç–º–æ–¥–∑–∏
        aspect_text = photo_generator.get_aspect_ratio_description()

        keyboard_data = photo_generator.get_aspect_ratio_keyboard(style)
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text=btn["text"], callback_data=btn["callback_data"])
             for btn in row]
            for row in keyboard_data
        ])

        await callback.message.edit_text(
            escape_message_parts(aspect_text, version=2),
            parse_mode=ParseMode.MARKDOWN_V2,
            reply_markup=keyboard
        )

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É aspect_ratio
        await state.set_state(PhotoTransformStates.choosing_aspect_ratio)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç–∏–ª—è: {str(e)}")
        await callback.message.edit_text(
            escape_message_parts("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç–∏–ª—è. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.", version=2),
            parse_mode=ParseMode.MARKDOWN_V2
        )
        await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ aspect_ratio –∏ –∑–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
@photo_transform_router.callback_query(PhotoTransformStates.choosing_aspect_ratio, F.data.startswith("transform_ratio:"))
async def handle_aspect_ratio_selection(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω –∏ –∑–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
    try:
        await callback.answer()
        user_id = callback.from_user.id
        bot = callback.bot

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback
        parts = callback.data.split(":")
        style = parts[1]
        aspect_ratio = parts[2]

        # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
        resolution = "720p"

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data = await state.get_data()
        photo_file_id = data.get("photo_file_id")

        if not photo_file_id:
            await callback.message.edit_text(
                escape_message_parts("‚ùå –û—à–∏–±–∫–∞: —Ñ–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.", version=2),
                parse_mode=ParseMode.MARKDOWN_V2
            )
            await state.clear()
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∏–ª—è
        style_description = photo_generator.get_style_description(style)

        await callback.message.edit_text(
            escape_message_parts(style_description, version=2),
            parse_mode=ParseMode.MARKDOWN_V2
        )

        await asyncio.sleep(1)

        # –ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        start_text = (
            "‚è≥ –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...\n"
            "–≠—Ç–æ –ó–∞–π–º–µ—Ç –ú–∏–Ω—É—Ç—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ üòä"
        )
        progress_message = await callback.message.answer(
            escape_message_parts(start_text, version=2),
            parse_mode=ParseMode.MARKDOWN_V2
        )

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        await state.set_state(PhotoTransformStates.processing)
        await state.update_data(selected_style=style, selected_aspect_ratio=aspect_ratio, selected_resolution=resolution)

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        progress_task = asyncio.create_task(update_progress(progress_message, state))

        start_time = time.time()

        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –æ—Ç Telegram
            logger.info(f"–ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –æ—Ç Telegram –¥–ª—è user_id={user_id}")
            file = await bot.get_file(photo_file_id)

            # –°–æ–∑–¥–∞–µ–º BytesIO –æ–±—ä–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
            file_io = io.BytesIO()

            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –≤ BytesIO
            await bot.download_file(file.file_path, destination=file_io)

            # –ü–æ–ª—É—á–∞–µ–º –±–∞–π—Ç—ã
            file_io.seek(0)
            image_bytes = file_io.read()
            logger.info(f"–†–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {len(image_bytes)} –±–∞–π—Ç")

            # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
            logger.info(f"–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ —Å—Ç–∏–ª–µ {style}")
            result = await photo_generator.generate_image(
                image_bytes=image_bytes,
                style=style,
                user_id=user_id,
                aspect_ratio=aspect_ratio,
                resolution=resolution
            )

            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            progress_task.cancel()
            elapsed_time = time.time() - start_time
            min_sec = f"{int(elapsed_time // 60)} –º–∏–Ω {int(elapsed_time % 60)} —Å–µ–∫"

            if result["success"]:
                # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞ 100%
                try:
                    await progress_message.edit_text(
                        escape_message_parts(
                            f"üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n{get_progress_bar(100)}\n–ó–∞–Ω—è–ª–æ {min_sec}.",
                            version=2
                        ),
                        parse_mode=ParseMode.MARKDOWN_V2
                    )
                    await asyncio.sleep(1)
                except:
                    pass

                # –°–∫–∞—á–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                result_url = result.get('result_url')
                logger.info(f"URL —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {result_url}")
                result_image = await photo_generator.download_generated_image(result_url)
                logger.info(f"–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–∞—á–∞–Ω–æ, —Ä–∞–∑–º–µ—Ä: {len(result_image)} –±–∞–π—Ç")

                # –°–ø–∏—Å—ã–≤–∞–µ–º –ø–µ—á–µ–Ω—å–∫—É
                success = await update_user_credits(user_id, "decrement_photo", amount=1)
                logger.info(f"–°–ø–∏—Å–∞–Ω–∏–µ –ø–µ—á–µ–Ω—å–∫–∏ –¥–ª—è user_id={user_id}: {success}")

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                caption = f"""‚ú® –ì–æ—Ç–æ–≤–æ!

–í–∞—à–µ —Ñ–æ—Ç–æ –≤ —Å—Ç–∏–ª–µ {result['style_name']}

üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é PixelPie AI

–•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π —Å—Ç–∏–ª—å? –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ!"""

                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(text="üé≠ –ù–æ–≤–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="photo_transform"),
                        InlineKeyboardButton(text="üì± –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")
                    ]
                ])

                photo_input = BufferedInputFile(result_image, filename="transformed.jpg")

                await bot.send_photo(
                    chat_id=user_id,
                    photo=photo_input,
                    caption=escape_message_parts(caption, version=2),
                    parse_mode=ParseMode.MARKDOWN_V2,
                    reply_markup=keyboard
                )

                # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                try:
                    await callback.message.delete()
                except:
                    pass
                try:
                    await progress_message.delete()
                except:
                    pass

                logger.info(f"–£—Å–ø–µ—à–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ —Å—Ç–∏–ª–µ {style}")

            else:
                # –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                error_text = f"""‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
–û—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}

–ü–µ—á–µ–Ω—å–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å üç™
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å—Ç–∏–ª—å."""

                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="photo_transform"),
                        InlineKeyboardButton(text="üì± –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")
                    ]
                ])

                await progress_message.edit_text(
                    escape_message_parts(error_text, version=2),
                    parse_mode=ParseMode.MARKDOWN_V2,
                    reply_markup=keyboard
                )

                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—á–µ–Ω—å–∫—É
                success = await update_user_credits(user_id, "increment_photo", amount=1)
                logger.info(f"–í–æ–∑–≤—Ä–∞—Ç –ø–µ—á–µ–Ω—å–∫–∏ –¥–ª—è user_id={user_id}: {success}")

                logger.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {result.get('error')}")

        except Exception as e:
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}")

            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            if progress_task:
                try:
                    progress_task.cancel()
                except:
                    pass

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
            if progress_message:
                try:
                    await progress_message.delete()
                except:
                    pass

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—á–µ–Ω—å–∫—É
            try:
                success = await update_user_credits(user_id, "increment_photo", amount=1)
                logger.info(f"–í–æ–∑–≤—Ä–∞—Ç –ø–µ—á–µ–Ω—å–∫–∏ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –¥–ª—è user_id={user_id}: {success}")
            except:
                pass

            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await callback.message.edit_text(
                escape_message_parts(
                    "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.\n\n"
                    "–ü–µ—á–µ–Ω—å–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å üç™\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                    version=2
                ),
                parse_mode=ParseMode.MARKDOWN_V2,
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="photo_transform"),
                        InlineKeyboardButton(text="üì± –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")
                    ]
                ])
            )

        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()

    except Exception as e:
        logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ handle_aspect_ratio_selection: {str(e)}")

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –µ—Å–ª–∏ –µ—Å—Ç—å
        if 'progress_task' in locals() and progress_task:
            try:
                progress_task.cancel()
            except:
                pass

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
        if 'progress_message' in locals() and progress_message:
            try:
                await progress_message.delete()
            except:
                pass

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—á–µ–Ω—å–∫—É
        try:
            await update_user_credits(user_id, "increment_photo", amount=1)
            logger.info(f"–í–æ–∑–≤—Ä–∞—Ç –ø–µ—á–µ–Ω—å–∫–∏ –ø–æ—Å–ª–µ –æ–±—â–µ–π –æ—à–∏–±–∫–∏ –¥–ª—è user_id={user_id}")
        except:
            pass

        try:
            await callback.message.edit_text(
                escape_message_parts("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–µ—á–µ–Ω—å–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ üç™", version=2),
                parse_mode=ParseMode.MARKDOWN_V2,
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üì± –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
                ])
            )
        except:
            await callback.message.answer(
                escape_message_parts("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–µ—á–µ–Ω—å–∫–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ üç™", version=2),
                parse_mode=ParseMode.MARKDOWN_V2,
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üì± –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
                ])
            )

        await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
@photo_transform_router.callback_query(F.data == "transform_cancel")
async def handle_cancel(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    await callback.answer("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
    await callback.message.edit_text(
        escape_message_parts(
            "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´üé≠ –§–æ—Ç–æ –ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏–µ¬ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.",
            version=2
        ),
        parse_mode=ParseMode.MARKDOWN_V2,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üì± –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
        ])
    )
    await state.clear()

# –≠–∫—Å–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–∞
__all__ = ['photo_transform_router', 'init_photo_generator']
