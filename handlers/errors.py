import logging
from aiogram import Bot
from aiogram.types import Message, CallbackQuery
from aiogram.exceptions import TelegramBadRequest
from aiogram.enums import ParseMode
from handlers.utils import safe_escape_markdown as escape_md, send_message_with_fallback

from logger import get_logger
logger = get_logger('errors')

async def error_handler(update: Message | CallbackQuery, bot: Bot, error: Exception) -> None:
    """–õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏, –≤—ã–∑–≤–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏."""
    logger.error(msg="Exception while handling an update:", exc_info=error)

    user_id = None
    if isinstance(update, Message):
        if update.from_user:
            user_id = update.from_user.id
        elif update.chat:
            user_id = update.chat.id
    elif isinstance(update, CallbackQuery):
        if update.from_user:
            user_id = update.from_user.id

    if user_id:
        if isinstance(error, TelegramBadRequest):
            error_message = str(error).lower()
            ignored_errors = [
                "message is not modified",
                "message to edit not found",
                "message to delete not found",
                "query is too old",
                "message can't be edited",
                "message identifier not specified"
            ]

            if any(ignored_error in error_message for ignored_error in ignored_errors):
                logger.info(f"Suppressed user notification for a common BadRequest: {error} for user {user_id}")
                return

        try:
            error_message_user = escape_md(
                "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –Ω–µ–π. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —á–µ—Ä–µ–∑ /menu, "
                "–µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ –∏—Å—á–µ–∑–Ω–µ—Ç."
            )

            await send_message_with_fallback(
                bot,
                user_id,
                text=error_message_user,
                parse_mode=ParseMode.MARKDOWN
            )
        except Exception as e_send:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {str(e_send)}")
    else:
        logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å user_id –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ.")
